Version 0.1.0
 - More progress on proxy
 - Set cache dir when creating the graph object
 - Switched log -> srv.debug
 - Working caching and delegation
 - Merge branch 'master' into delegation
 - More lenient treatment of subjectAltName
 - Fixed parsing of subjectAltName field with multiple URI types
 - Added pointer to x509 rfc
 - Merge branch 'master' into delegation
 - Fixed acl dir walking
 - Merge branch 'master' into delegation
 - Sigh..Fix for multiple URIs in SAN
 - Fix for multiple URIs in SAN
 - Fixed WebID-TLS auth; allows multiple URI types in the SAN field
 - Started working on cached profiles
 - Use delegation proxy before setting CORS
 - Fixed User and Origin header
 - Added On-Behalf-Of header; moved code inside the handle to use authentication
 - Issue agent id when starting server
 - Improved JSON-LD test
 - Agent WebID resources
 - Don't remove acl and meta files if they are the same with the resource file
 - Do not include acls and meta files in dir listing
 - Fixed URL encode for white spaces in file uploads
 - Aligned config example with acl and meta naming conventions
 - Merge pull request #48 from linkeddata/experimental
 - Fixed merge from master
 - Commented out code that req Go 1.5
 - Made sniffing only as a last resort
 - Improved pathinfo behavior; fixed mime test
 - Done writing the mime handler function
 - Fix for switch to system-wide suffixes
 - Show travis status only for master
 - Working mime parsing
 - Started working on mime parsing
 - Use local URL
 - Fixed order of args in test function
 - Improved reverse-proxy check
 - Uses local URL for test
 - Started removing sniffing
 - Moved MetaSuffix and AclSuffix to server config
 - Added test for white spaces in URIs
 - Added aclSuffix and metaSuffix as server config params
 - Fixed last gofmt issue
 - Fixed golint issue
 - Fixed gofmt, lint and vet issues
 - Fixed recursive ACL check
 - Fixed bug affecting root acl file
 - Do not sniff for PUT/POST. Removed 'Triples' header.
 - Removed dependency on testflight
 - Removed testflight dependency
 - Enabled proper ETag caching for dirs
 - Fixed SPARQLUpdate parser to allow ; chars
 - Forgot to add parent live updates for PATCH
 - Propagate websocket events to parent container
 - Fixed conflict when creating a new resource with an existing slug. Also fixed #43
 - Fixed a security issue in WebID-RSA auth
 - Skip non-HTTP URIs in certs
 - Added tests for #42
 - Fixed #42
 - Removed path from Etag
 - Fixed assert comparison for int to int64.
 - Merge pull request #37 from melvincarvalho/master
 - Fixed load with command line arguments
 - Minor refactoring
 - Added a bit more debugging
 - Added basic form for certgen api
 - Fixed erroneous report of dirs by magicMime
 - Remove unuseful debug info
 - Removed redundant 404 response
 - Skip current iteration if acl file doesn't exist
 - Check if file exists before trying to find mimeType
 - Merge branch 'master' into webidrsa
 - Performance improvement for the etag generator
 - Add websocket support for PATCH
 - Add Location header for PUTs
 - More flexibility
 - ADD + RUN mv fix for Dockerfile
 - ADD -> RUN cp in Dockerfile
 - COPY -> ADD in Dockerfile
 - Fixed context in Docker COPY
 - Fixed Docker COPY path
 - Added config option
 - Load conf file if exists, otherwise use defaults
 - Increased cache validity for CORS requests
 - Merge branch 'master' into webidrsa
 - add parser.SetLogHandler
 - Renamed test function for WebID-RSA
 - Implemented WebID-RSA auth protocol
 - Added HTTP Digest helper functions
 - Refactored acl checks (added HTTP 401)
 - Started work on WebID+PGP auth
 - More tests for SPARQL PATCH
 - Reordered err checking
 - Improved err checking for Graph.ReadFile()
 - Add Location header to file uploads
 - Expose system API links
 - Replaced foaf:title with dct:title in profile docs
 - Added example of using config file
 - Do not redirect to skin if HEAD
 - No need to redirect if HEAD
 - Fixed foaf property fullname -> name
 - Fixed golint warnings
 - Give the test server some time to start
 - Disable caching for html requests of dirs (trigger skin)
 - Defer closing SMTP connection
 - Simplified SMTP dial tests
 - Added minimal SMTP server for tests
 - Added flag for insecure SMTP servers
 - Added tests for accountRecovery
 - Removed printlns
 - Fixed cookie value
 - Force SSL for certain email servers
 - Disabled the accountRecovery tests for now
 - Use acl:delegates instead of acl:delegatee
 - Minor fix
 - Added more text/disclaimers
 - Add ACL check for webdav requests
 - Re-enabled the LDP tests
 - Use brack() for setting Link headers
 - Renamed PortHTTP* to ListenHTTP* for consistency
 - Use all sources when compiling & running
 - Moved signup params into the skin URL
 - Added extra param to signup redirect
 - Renamed NewRecoveryToken -> NewSecureToken; moved to auth.go
 - Return basic skin for accountRecovery
 - Added basic form for accountRecovery
 - Added gold.conf to ignore
 - Renamed Root to DataRoot
 - Minor text clarification
 - Improved server configuration handling
 - Renamed SignUpURL to SignUpSkin for consistency
 - Added comments for global structs
 - Changed type for TokenAge (easy config)
 - Changed type for CookieAge (easy config)
 - Example configuration file
 - Merge branch 'master' of github.com:linkeddata/gold
 - Split accountRecovery into two functions; added tests
 - Set default value for tokenAge
 - Typo
 - Added tokenAge flag
 - Fixed pathInfo File path
 - better testing URL
 - New method AllowControl
 - Added template for accountRecovery email
 - Started working on SMTP support
 - Added SMTP config variable
 - Load config from the JSON file
 - Account recovery token expires after 5 mins
 - Update .travis.yml
 - Use HasPrefix for catching proxy requests
 - Added API for account recovery
 - Use HasPrefix for catching system requests
 - Added websocket subpub test
 - Started tests for websockets
 - Expose user cert for websocket tests
 - Commented printlns until switch to logger
 - simplify auth, check more errors
 - travis missing some mime
 - refactor authentication
 - add mime tests
 - consolidate mime
 - rename SPARQLUpdate
 - pave way for more SPARQL granularity
 - restore default ports
 - only include port != 443
 - sans port, redir w/ full req.Host
 - add redirection to HTTPS
 - Added basic API for account information (closes #26)
 - Added comments for golint
 - Added DiskLimit in preparation for public accounts
 - New API to only generate certs
 - Clean up code; enabled keyUsage in certs
 - debug log already has file:lineno
 - add Updates-Via header
 - more methods
 - Update Dockerfile
 - [Minor] Forgot to add :// for signup redirect URL
 - Redirect to signup widget if running in vhost mode and account doesn't exist
 - cleanup server root / testing
 - fixup tests
 - more fixes needed
 - move root and vhosts inside config
 - add ServerConfig, use core log package
 - Moved pathinfo test into its own file
 - move pathinfo
 - Removed extra slash between vhost and resource
 - Handle vhosts case in pathInfo() before everything else
 - more webdav methods, closes #25
 - add websocket pubsub
 - Fixed bug affecting serverRoot
 - Simplified docs
 - add websocket comments
 - add websocket placeholder
 - Avoid adding extra / if dealing with root dir
 - Aligned proxy with comma notation (/proxy -> /,proxy)
 - Renamed variable accountName -> accountURL
 - Fixed bug affecting new account. Also made accountStatus to work without vhosts
 - Added missing port for vhosts
 - Added a new test: TestNewAccountWithoutVhosts
 - Minor bugfix for NewAccount
 - Added extra test for NewAccount using vhosts
 - Refactored the pathInfo() function after moving root checks in daemon.go
 - Merge branch 'master' of github.com:linkeddata/gold
 - Allow creation of accounts (space) without creating WebIDs
 - Also check len(Bytes) in case we need to respond with Bytes
 - add log.Lshortfile
 - add comment for golint
 - drop ServerPort global
 - Add trailing slash for root path
 - Added proxy dependency
 - separate proxy tests
 - add proxy test
 - add CORS proxy, fixes #20
 - bugfix err shadow
 - accountName should return the full URL for the account
 - Added loginURI to the statusResponse API
 - Removed schema from server name in cert commonName
 - Ignore media types for HEAD and OPTIONS
 - Added extra tests for CTypes
 - Fixed Tim's bug (#11) re. serializing application/xhtml+xml
 - Fixed default content type for empty mimeType returned by magicMime
 - Removed trailing /
 - Fixed order of params
 - Drop port 80 since it will never be used
 - Added default ACLs for profile and account
 - x509 DER cert must be copied into the writer instead of returned through the normal response
 - Changed return type from multi -> struct
 - Added SubjectKeyId to cert
 - Do not overwrite existing account profile
 - Got rid of the annoying messages in TestSkin
 - Fixed path building for vhosts
 - Added tests for vhosts and single host
 - Removed (commented) unsupported key types (for now)
 - Fixed bug where weird chars were showing up before URI: in subjectAltName
 - Renamed function spkacNew -> newAccount. Misc fixes.
 - Added extra debug info
 - Working profile cert generator (except for Chrome)
 - Simplified the HandleSystem function
 - Added ServerPort global variable
 - Improved the SPKAC parsing function
 - Added profile generator (turtle). Fixed subjectAltName (missing URI:)
 - Implemented accountStatus API
 - Renamed the function NewWebIDProfile -> NewWebIDProfileWithKeys
 - Renamed the function NewWebIDProfile -> NewWebIDProfileWithKeys
 - Started working on accountStatus API
 - Added custom response page for 404 errors
 - Added tests for SPKAC
 - Added cert generator for SPKAC requests
 - Added WebID specific tests
 - Started working on System api
 - Fixed linting errors
 - Fixed gofmt warning
 - Added travis integration with gitter.im
 - Merge pull request #24 from gitter-badger/gitter-badge
 - Added Gitter badge
 - Changed the URL for the cover tools.
 - Removed extra 0 from Go version.
 - Upated to Go 1.4.0
 - Removed an override of magicType value.
 - Improved the GetJsonLd test.
 - Added a new test for JSONLD Serializer.
 - Fixed a nil datatype bug.
 - Added extra dependencies.
 - Updated the README
 - Merge branch 'master' of https://github.com/linkeddata/gold
 - Added an extra debug message for the server.
 - Added a couple of tests for txt files.
 - Added tests for the JSONLD parser.
 - Added JSONLD parser based on the gojsonld library. Added a helper function to transform gojsonld.Term into gold.Term.
 - Use the http link instead of https for WARP.
 - add cookieAge flag, closes #22
 - drop extra magic
 - add more web media types, add tests, drop loop
 - Update .travis.yml
 - Added file mapping for web page resources so they get served with the right mime type.
 - Fixed path builder for glob.
 - Added gorilla cookie lib dependency in the README.
 - Moved the Auth() function to a dedicated file. Added more logging to error catches.
 - Cleaned up cookies code. Renamed cookie functions for better readability.
 - Added cookie (session) authentication. Login/logout to follow shortly.
 - Moved the log message to server.go
 - No need to call graph.WriteFile() if the graph is empty.
 - When listing resources, add multiple types for the resource if it has more than one. Other fixes.
 - Added test for HTTP 409 when reusing the same Slug value when posting to a container.
 - Improved logging for ACL checks.
 - Log failures during WebID-TLS auth.
 - Properly report errors when failing to fetch graphs.
 - Set the Content-Length header for HEAD instead of adding it.
 - Replaced os.IsExist() with a different check. (damn misnomer)
 - Only set length if the resource exists.
 - Forgot to expose Content-Length header.
 - Added test for Content-Length in HEAD responses.
 - Added Content-Length header to HEAD responses.
 - Unsuccessful HTTP responses are more verbose now.
 - Fixed check for dirs when building the resource paths/uris. Return proper Link headers when using PUT.
 - Added a test for proper acl/meta resources when creating a dir through PUT.
 - Added support for LDP PUT.
 - Make sure we check for DirectContainer type.
 - Added Control support for ACLs. [to be improved]
 - Added 'owner' as another type of agent.
 - Disabled the Link headers test for now. It's broken in the LDP spec anyway, so we're waiting for a fix.
 - Shuffled the Link headers a bit to have them where they're needed.
 - Improved handling of If-Match and If-None-Match. Now accepting multiple ETag values.
 - Merge branch 'master' of github.com:linkeddata/gold
 - If-None-Match should return 304 Not Modified instead of 412 for GET/HEAD if the etags match.
 - Added a run/compile source example.
 - Improved the server example.
 - Updated the docker mount point example.
 - Added VOLUME to indicate host mount point.
 - Update README.md
 - Added docker install steps.
 - Used a predefined root dir.
 - Added dependency packages for tests.
 - Create Dockerfile
 - Minor fix for RDF resource checking -- simplified the code.
 - Attempt to guess if resource is of type RDF by reading the first line. Fixes previous librdf errors such as "[ERROR] syntax error at 'p'"
 - Added tests for user groups. Also fixed the error check order for all tests.
 - Important -- added support for user groups during ACL check.
 - Fail gracefully when using a container URI for a PUT.
 - Minor fix for debug text (PATCH->PUT).
 - Moved common headers outside the method switch. Fixed a bug with multipart file uploads.
 - Minor fix -- using brack() for consistency.
 - Added more flexibility (single/double quotes) to the Link header parser.
 - Removed a debug log message from MKCOL test.
 - Improved Link header generation to be on par with LDP requirements.
 - Minor test improvement to LinkHeader parser.
 - Removed/improved some tests, following the new refactoring of PATCH/POST/PUT.
 - Refactored PATCH/POST/PUT into their own cases. Aligned gold with the evolving LDP spec.
 - ETag strings must be quoted.
 - Merge branch 'master' of github.com:linkeddata/gold
 - Writing resources should now properly check if the path is a dir or not. Also added extra debugging.
 - Update .travis.yml
 - Dir listing should now properly display the type set in the ,meta file for each resource.
 - Origin ACL check should first make sure there are policies for origin URIs.
 - Minor ACL fix for dir walking. Also replaced debug messages with dedicated function.
 - Moved all debug messages to a custom function.
 - Root path starting with / should always take precedence.
 - Build absolute path when starting server.
 - Do not set ETag before loading tabulator. It causes 412 Precondition Failed errors.
 - Removed an extra char/typo/
 - Allow for more lenient WebID-TLS auth.
 - Minor code cleanup.
 - Minor fix for trailing slash in user provided root param.
 - Added debug info and cleaned the code a bit.
 - Added debug info.
 - WebID-TLS auth should now properly check for data types.
 - First attempt at adding the WARP skin. (currently loaded from github)
 - merge reqPath into pathInfo
 - Improved handling of ETags and non-RDF resources.
 - Allow POSTing multipart.
 - Fixed multipart upload. Added urlencode/decode for resources.
 - Also using PUT to create LDPCs and LDPRs.
 - Added WebID delegation for ACLs.
 - Update .travis.yml
 - Update .travis.yml
 - No need to pass the request in the call.
 - fix bugfix
 - Added tests for Origin ACL.
 - Fixed a bug that always allowed access for Origin.
 - add origin check
 - PathInfo() now also stores the magicType value.
 - Minor fix (rename).
 - Made allow() a private function.
 - Added tests for Term.
 - Added a new test for defrag().
 - Cleaned up the debug prints.
 - add testing with latest go1.3beta2
 - improve readability
 - minor fixes
 - add LoadURI defrag
 - fix tests
 - Restructured the globbing part. Also reorganized path variables.
 - Added a few more tests
 - Add missing trailing slashes for dirs in PathInfo().
 - Improved the path recursion algorithm for defaultForNew.
 - Added a test for missing trailing slash for dirs.
 - Dir listing fix for root (/). This fix exposed another issue: dir listing attempts to parse all files to find the rdf:type for each resource -- it will fail for non-RDF resources.
 - more granular locking
 - add insecure listener for benchmarking
 - Added minor test for debrack of very short uri
 - Added test for parsing empty Link header
 - Minor fix
 - Added test for Accept: *
 - Added test for Triple = Triple
 - Renamed some variables to match the classic Go style. Improved handling of text/html requests. Improved tests.
 - Added defaultForNew support for ACLs. (Tests too)
 - Renamed getPathInfo to PathInfo.
 - Added full tests for getPathInfo()
 - Minor fix
 - Added a genric function that provides all paths/uris for a given resource.
 - Added more ACL tests.
 - Check append first.
 - Fixed several tests.
 - minor namespace fix
 - drop more argo
 - minor style tweaks
 - drop argo
 - Fixed URLs for meta files. Fixed tests.
 - add If-{,None-}Match preconditions
 - add basic (expanded) jsonld serializer
 - improve TestACLOwner
 - ACL: add accessTo check
 - NewGraph only accepts URI argument
 - Added Owner test.
 - WebID profiles are now in /_test/
 - prefer skin higher
 - fix leading dots
 - more ACL tests
 - Merged Joe's commit.
 - Switched to user http clients for tests.
 - fix travis
 - add TestACLCleanup
 - Blank test
 - add TestACLInit
 - generalize newRSAcert
 - add rdf_test
 - generalize newRSA
 - Advertise ACL location.
 - Split link headers by comma+space.
 - Added some ACL utility functions and tests.
 - Added more tests for quotes.
 - abstract response
 - maintain abstraction barrier
 - Renamed tests for better readability.
 - Moved the check for PeerCertificates outside of the function, to allow for more auth methods.
 - Added more LDP support.
 - Renamed util.go to ldp.go
 - Minor changes to UUID for LDP.
 - minor fixes
 - Finished the LDP Slug support.
 - Reduced the UUID length.
 - add request locking
 - rename webid locks
 - Added ETag support.
 - Started adding LDP support.
 - Utility functions (e.g. header parsers)
 - PUT raw file now uses local file instead of downloading it from the Web.
 - Added globbing + tests.
 - add AppendFile
 - Added resource type for each RDF resource when listing dir.
 - Added support for multipart/form-data uploads (multiple files and multiple chunks).
 - Added tests for literals to One() and All()
 - add basic ACL skel
 - Added tests for One() and All()
 - Switched to using IterTriples() instead of Filter() inside One() and All()
 - Added tests for dir listing as RDF.
 - Added One() and All() methods to find triples.
 - Added dir listing using RDF.
 - Added directory listing in RDF.
 - add NewServer; move all flags to daemon
 - less library flags
 - improve mkdir collisions
 - directory index skel
 - use text/scanner for SPARQL
 - move debug flag to server
 - update upstream magicmime.New
 - add more detailed installation instructions
 - Update README.md
 - improve tests + Graph
 - add libmagic-dev (fix CI)
 - add AnyGraph interface
 - add flags: dirIndex, skin
 - add raw resource support
 - vhosts: strip ports
 - more benchmarks
 - update g.ParseFile to use g.Parse
 - add test coverage
 - add more tests
 - add WebID testing end-to-end
 - add make test
 - add coverage Makefile
 - add OPTIONS test
 - add vhosts flag
 - more turtle tests
 - add MKCOL test
 - add server tests w/ Turtle
 - add JSON PATCH
 - add simple SPARQL Update
 - Update README.md
 - start cpus allowed at 1
 - add multicore flag
 - add streaming option
 - add GET, HEAD, POST, PUT, DELETE, MKCOL
 - add WebID TLS auth
 - add Graph.Load + RDF NS
 - add TLS server
 - add conneg + CORS
 - add travis dependencies
 - Create README.md
 - tabulator skin works!

